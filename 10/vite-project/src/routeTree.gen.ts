/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AboutRouteImport } from './routes/about'
import { Route as UsernameRouteImport } from './routes/$username'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SettingUserTypeRouteImport } from './routes/setting.user.$type'

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const UsernameRoute = UsernameRouteImport.update({
  id: '/$username',
  path: '/$username',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingUserTypeRoute = SettingUserTypeRouteImport.update({
  id: '/setting/user/$type',
  path: '/setting/user/$type',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$username': typeof UsernameRoute
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardRoute
  '/setting/user/$type': typeof SettingUserTypeRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$username': typeof UsernameRoute
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardRoute
  '/setting/user/$type': typeof SettingUserTypeRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$username': typeof UsernameRoute
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardRoute
  '/setting/user/$type': typeof SettingUserTypeRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$username'
    | '/about'
    | '/dashboard'
    | '/setting/user/$type'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$username' | '/about' | '/dashboard' | '/setting/user/$type'
  id:
    | '__root__'
    | '/'
    | '/$username'
    | '/about'
    | '/dashboard'
    | '/setting/user/$type'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  UsernameRoute: typeof UsernameRoute
  AboutRoute: typeof AboutRoute
  DashboardRoute: typeof DashboardRoute
  SettingUserTypeRoute: typeof SettingUserTypeRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$username': {
      id: '/$username'
      path: '/$username'
      fullPath: '/$username'
      preLoaderRoute: typeof UsernameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/setting/user/$type': {
      id: '/setting/user/$type'
      path: '/setting/user/$type'
      fullPath: '/setting/user/$type'
      preLoaderRoute: typeof SettingUserTypeRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  UsernameRoute: UsernameRoute,
  AboutRoute: AboutRoute,
  DashboardRoute: DashboardRoute,
  SettingUserTypeRoute: SettingUserTypeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
